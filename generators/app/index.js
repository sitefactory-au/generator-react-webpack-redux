'use strict';
let generator = require('yeoman-generator');
let path = require('path');
let utils = require('../../utils/all');
let prompts = require('./prompts');

module.exports = generator.Base.extend({

  constructor: function () {
    generator.Base.apply(this, arguments);

    // Make options available
    this.option('skip-welcome-message', {
      desc: 'Skip the welcome message',
      type: Boolean,
      defaults: false
    });

    this.option('skip-install');

    this.config.save();
  },

  initializing: function () {
    if (!this.options['skip-welcome-message']) {
      this.log(require('yeoman-welcome'));
      this.log('Out of the box I include Webpack and some default React components.\n');
    }
  },

  prompting: function () {
    let done = this.async();
    this.prompt(prompts, function (props) {

      // Make sure to get the correct app name if it is not the default
      if (props.appName !== utils.yeoman.getAppName()) {
        props.appName = utils.yeoman.getAppName(props.appName);
      }

      // Set needed global vars for yo
      this.appName = props.appName;
      this.style = props.style;
      this.createApi = props.createApi; 

      // Set needed keys into config
      this.config.set('appName', this.appName);
      this.config.set('appPath', this.appPath);      
      this.config.set('createApi', this.createApi);

      this.config.save();

      done();
    }.bind(this));
  },

  configuring: function () {

    // Generate our package.json. Make sure to also include the required dependencies for styles
    //let defaultSettings = this.fs.readJSON(path.join(baseRootPath, 'package.json'));
    let defaultSettings = this.fs.readJSON(path.join(this.sourceRoot(), '../package_json.tmpl'));
    let packageSettings = {
      name: this.appName,
      private: true,
      version: '0.0.1',
      description: 'YOUR DESCRIPTION - Generated by generator-react-webpack',
      main: '',
      scripts: defaultSettings.scripts,
      repository: '',
      keywords: [],
      author: 'Your name here',
      devDependencies: defaultSettings.devDependencies,
      dependencies: defaultSettings.dependencies
    };

    this.fs.writeJSON(this.destinationPath('package.json'), packageSettings);
  },

  writing: function() {

// Get all files in our repo and copy the ones we should
    var basePath = this.sourceRoot();
    var destPath = this.destinationRoot();

    console.log( 'Scaffolding application');
    this.fs.copy(basePath, destPath);
  
    this.composeWith('sf-redux:component', {
      args: ['HelloWorld', 'true']
    });
    
    this.composeWith('sf-redux:page', {
      args: ['Home']
    });

    if( this.createApi ){
      this.composeWith('sf-redux:api', {
        args: ['api']
      });
    }
  },

  install: function () {
    this.conflicter.force = true;

    utils.attach.commit();
  
    if (!this.options['skip-install']) {
      this.npmInstall();
    }
  },

  end: function() {
    this.log( 'Finished.')
  }
});
